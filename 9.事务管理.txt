
1.事务管理：
	事务管理就是一组DML（数据操纵语言）语句组成，这些语句逻辑上存在相关性，这一组DML语句要么
	全部成功，要么全部失败，是一个整体。MySQL提供的一种机制，保证我们达到这样的效果。事务还规
	定不同的客户端看到的数据是不同的。
	
	例子:
	类似于线程安全，打比方客户端a去查询车票信息，只剩一张票，当a购买后，若没有执行更新数据库操作
	的式候，客户端b去检查票数，发现大于0，然后购买，此时a将票数更新数据返回数据库。造成了一张
	票被卖出两次。所以，事务管理就显得尤为重要。
	
2.事务的基本操作：
	
	*开始一个事务
	start transaction;
	
	*创建一个保存点
	savepoint 保存点名;
	
	*回到保存点（回滚）
	rollback to 保存点名;
	
	*提交事务（结束一个事务）
	commit;
	
	2.1回滚可以使事务进度回到保存点的状态
	
	2.2在提交事务之前，其他客户端是无法查询到当前事务内所做的操作的
	
	2.3事务操作注意事项:
		*如果没有设置保存点，也可以回滚，只能回滚到事务的开始。直接使用rollback（前提是事务没提交）
		*如果一个事务被提交了(commit)，则不可以回退(rollback)
		*可以选择回退到哪个保存点
		*innoDB支持事务，MylSAM不支持事务
		
3.事务隔离级别：
	当MySQL表被多个线程或者客户端开启各自事务操作数据库中的数据时，MySQL提供了一种机制，
	可以让不同的事务在操作数据时，具有隔离性。从而保证数据的一致性。
	
	3.1无隔离性带来的问题:
		
		*脏读：
			是指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库
			中，这时，另一个事务也访问这个数据，然后使用了这个数据。
			
		*不可重复读：
			是指在一个事务内，多次读同一数据。在这个事务没结束时，另一个事务也访问该同一数据。
			那么，在第一个事务当中两次读数据之间，由于第二个事务的修改，使得事务一两次读取的
			数据不同。这样就发生了在一个事务中的两次读到的数据是不一样的，因此称为不可重复读。
			
		*幻读：
			是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，
			这种修改涉及到全部数据行。同时第二个事务也修改这个表中的数据，这种修改是向表中插入
			了一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还存在没有修改的数据行，
			就像发生幻觉一样。
			
	3.2设置事务的隔离级别
		
		读未提交：read uncommitted  (脏读，不可重复读，幻读) （不加锁）
		读已提交：read commited （不可重复读，幻读） （不加锁）
		可重复度: repeatable read (无) （默认） （不加锁）
		
		可串行化（serializable）（无）  （加锁）
		当客户端A在执行select过程中，DBMS会对库加锁，如果这时客户端B执行插入，只要还没释放锁，插入不进
        去，会将B的update语句放入等待队列，直到释放了锁或超时
		
		
		语法：
			set session transaction isolation level read （上述4种）;
			
			查看当前隔离级别:
MariaDB [jxy]> select @@tx_isolation;
+-----------------+
| @@tx_isolation  |
+-----------------+
| REPEATABLE-READ |
+-----------------+
1 row in set (0.00 sec)


	**3.3事务的ACID特性：
		
		*原子性（Atomicity）：
			事务是应用中最小的执行单位，就如原子是自然界的最小颗粒，具有不可再分的特征一样，
			事务是应用中不可再分的最小逻辑执行体。
			
		*一致性(Consistency)
			事务执行的结果，必须使数据库从一个一致性状态，变到另一个一致性状态。当数据库只
			包含事务成功提交的结果时，数据库处于一致性状态。如果系统运行发生中断，某个事务
			尚未完成而被迫中断，而该未完成的事务对数据库所做的修改已被写入数据库，此时数据库
			就出于一种不正确的状态（不一致）。因此一致性使通过原子性来保证的。
		
		*隔离性((Isolation)):
			各个事务的执行互不干扰，任意一个事务的内部操作对其他并发事务都是隔离的。也就是说，并发
			执行的事务之间不能看到对方的中间状态，并发之间的事务不能相互影响。
		*持久性（Durability）：
			持久性是指，一个事务一旦被提交，它对数据库所作的改变都要记录到永久存储之中(例如：磁盘)。
			


			
			
		
	